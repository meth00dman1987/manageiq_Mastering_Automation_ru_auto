[[service-tips-and-tricks]]
== Советы и хитрости обслуживания

Есть три полезных совета и рекомендации, о которых нужно знать при разработке услуг, и мы обсудим их здесь.

=== Test Virtual Machine Provisioning First

Перед разработкой элемента каталога услуг для предоставления виртуальной машины проверьте, что интерактивное положение (*Инфраструктура -> Виртуальные машины -> Lifecycle -> Provision VMS*) из того же шаблона виртуальной машины, используя те же настройки виртуальных машин, успешно работает.

Это должно включать в себя тот же тип размещения (автоматически или выбран вручную), а также то же количество процессоров и диапазонов размера памяти, которые будут предложены в диалоговом окне обслуживания.

Устранение неполадок. Неисправное интерактивное положение виртуальной машины проще, чем устранение неисправностей заказа в обслуживании.

=== Re-Create the Service Item if the Template Changes

Если какие-либо изменения внесены в шаблон, который приведет к новому внутреннему идентификатору шаблона, то элемент каталога услуг должен быть воссоздан (даже если новый шаблон имеет то же имя, что и старый). Новый шаблон будет представлен новым объектом в VMDB, поэтому шаблон запроса о предоставлении услуг должен будет быть воссоздан с помощью нового идентификатора шаблона.

=== Custom State Machines

Есть моменты, когда машина для государственного обеспечения обслуживания не обеспечивает гибкость, которая нам необходима для создания услуги, которые нам требуются. Примером этого будет желать представить диалог услуг, предлагающий выбор шаблонов VM для предоставления новой виртуальной машины (по умолчанию это выбирается и фиксируется при создании элемента каталога). К счастью, мы не ограничены, чтобы использовать AS-поставленные государственные машины.

Когда мы создаем новый элемент каталога сервисов, нам представлен раскрывающий список типов элементов каталога на выбор (см. << i1 >>).

[[i1]]
. Выбор типа элемента каталога
image::images/ss1.png[Screenshot,420,align="center"]
{zwsp} +

Как показывает << i1 >>, есть * универсальный * выбор, который мы можем использовать. Если мы выберем этот тип элемента каталога, мы можем создать наш собственный экземпляр _serviceProvision_template_ State Machine. Это может обрабатывать анализ любых элементов каталога услуг и собрать аргументы для вызова `$ evm.execute ('create_provision_request')` для завершения положения виртуальной реальности. (См. Ссылку: ../ Создание_Provisioning_Requests_programmaly/gate.asciidoc [Создание запросов на программирование программно]).

Вручную поднимая аргументы на + create_provision_request + таким образом, мы имеем полный контроль над запросом о предоставлении виртуальной реальности. Мы могли бы легко подтолкнуть пользователя для имени шаблона для предоставления или количества виртуальных машин для предоставления с запросом, например .footNote: [https://github.com/ramrexx/cloudforms_essentials= Основные основания] имеет несколько примеров таких пользовательских машин, которые мы можем использовать или адаптироваться.]

=== Summary

Эта глава показала нам три простых совета, которые следует учитывать при работе с услугами.
Общие услуги, в частности, полезны, если мы хотим создать единый элемент каталога услуг для предоставления новой виртуальной машины на выбор поставщиков (например, VMware или OpenStack). С помощью традиционного элемента каталога обслуживания мы должны сначала выбрать шаблон, и это решает поставщика назначения. С помощью общего типа службы мы можем представить нашим пользователям список шаблонов VMware или изображений OpenStack Glance на выбор во время выполнения. В зависимости от выбранного шаблона или изображения мы можем предоставить соответствующие специфичные для поставщика аргументы в `$ evm.execute ('create_provision_request')` для выполнения запроса.
