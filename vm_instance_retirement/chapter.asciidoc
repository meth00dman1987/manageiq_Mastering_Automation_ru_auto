[[vm-instance-retirement]]
== Виртуальная машина и пенсия экземпляра

CloudForms и Manageiq являются инструментами управления жизненным циклом виртуальных машин и экземпляров, и до сих пор мы сосредоточились на фазе обеспечения этого жизненного цикла. Продукты также имеют рабочие процессы пенсионных процессов виртуальной машины, которые позволяют нам управлять выходом на пенсию и удалением наших виртуальных машин или экземпляров, как от поставщика, так и от CloudForms/Manageiq VMDB, если это необходимо.

Процесс выхода на пенсию позволяет нам относиться к виртуальным машинам по -разному, которые были предоставлены CloudForms или Manageiq, и те, которые могли бы уже существовать в инфраструктуре поставщика, или были предоставлены менеджером по инфраструктуре.

[NOTE]
Возможно, мы захотите сохранить запись VMDB виртуальной машины еще долго после его удаления от поставщика в целях записи и аудита.

В этой главе мы рассмотрим процесс выхода на пенсию для виртуальных машин и экземпляров.

=== Initiating Retirement

Выход на пенсию визуальной машины или экземпляра инициируется из меню «Жизненный цикл» на странице сведений о виртуальной машине (см. << i1 >>).

[[i1]]
. Виртуальная машина или экземпляр пенсионного меню
image::images/ss1.png[Screenshot,400,align="center"]
{zwsp} +

Нажав на * удаление этого виртуальной машины * Повышает событие * request_vm_retire *, которое начинает цепочку отношений через хранилище данных:

* * request_vm_retire * ->
** _/system/event/miqevent/policy/request_vm_retire_ ->
** _/{Cloud, инфраструктура}/vm/lifecycle/пенсионер_ ->
** _/{Cloud, Infrastructure}/vm/wetirement/statemachines/vmretirement/{default, unregister} _
 
Отношение от _lifecycle/streight_ пересылает обработку событий в привилегированную машину пенсионного состояния виртуальной машины: _default_ для облачных экземпляров, _default_ или _unregister_ для виртуальных машин инфраструктуры. Мы можем выбрать нашу предпочтительную машину состояния инфраструктуры (_default_ - это по умолчанию), копировав экземпляр _/инфраструктура/VM/Lifecycle/пенсионный _ в наш собственный домен и соответствующим образом редактируя.


=== Retirement-Related Attributes and Methods

Объект виртуальной машины имеет ряд методов, связанных с выходом на пенсию:

....
$ evm.root ['vm']. retire_now
$ evm.root ['vm']. start_retirement
$ evm.root ['vm']. Finish_retirement
$ evm.root ['vm']. Выход на пенсию?
$ evm.root ['vm']. Вышел на пенсию?
$ evm.root ['vm']. error_reting?
$ evm.root ['vm']. retirement_state =
$ evm.root ['vm']. retirement_warn =
$ evm.root ['vm']. retires_on =
....

[NOTE]
====
CloudForms 4.2/Manageiq _euwe_ также добавил новый метод `extend_retires_on`, чтобы дата выхода на пенсию была расширена.
====

У него также есть несколько атрибутов:

....
$ evm.root ['vm']. Пенсиован = nil
$ evm.root ['vm']. retirement_last_warn = nil
$ evm.root ['vm']. retirement_requester = nil
$ evm.root ['vm']. retirement_state = nil
$ evm.root ['vm']. retirement_warn = nil
$ evm.root ['vm']. retires_on = nil
....

Во время пенсионного процесса некоторые из них настроены на указание прогресса:

....
$ evm.root ['vm']. retirement_requester = admin (type: string)
$ evm.root ['vm']. retirement_state = пенсионер (тип: строка)
....

и завершение:

....
$ evm.root ['vm']. Вышел на пенсию = true (type: trueclass)
$ evm.root ['vm']. retirement_requester = nil
$ evm.root ['vm']. retirement_state = пенсиован (тип: строка)
$ evm.root ['vm']. retires_on = 2015-12-10 (тип: дата)
....

=== VM Retirement State Machine

Стативные машины (ы) виртуальной машины отменили многие операции, выполняемые государственной машиной виртуальной машины. Они позволяют нам необязательно деактивировать запись CI от CMDB; нерегистрация от DHCP, Active Directory и DNS; и выпустите как Mac, так и IP -адреса (см. << i2 >>).

[[i2]]
.Fields of VM Petirement State Machine
image::images/ss2.png[Screenshot,700,align="center"]
{zwsp} +

==== StartRetirement

Экземпляр _startretirement_ вызывает метод машины _start_retirement_, который проверяет, находится ли виртуальная машина в состоянии «удален на пенсию» или «уход», и если это так, он прервет. Если ни в одном из этих состояний он не называет метод виртуальной машины `start_retirement`, который устанавливает атрибут` retirement_state` на «выход на пенсию».

==== PreRetirement/CheckPreRetirement

Государственная машина позволяет нам иметь экземпляры и методы для этих этапов, специфичных для поставщика. Экземпляр вне коробки _preretirement_ экземпляр запускает метод поставщика _pre_retirement_, который просто отключает виртуальную машину. Экземпляр вне коробки _preretirement_ запускает соответствующий метод, специфичный для поставщика _pre_retirement_, т.е. _amazon_pre_retirement_, _azure_pre_retirement_ или _openstack_pre_retirement_.

_CHECKPRERETIRENT_ Проверяет, что выключение питания завершилось. Облачные версии имеют соответствующие методы, специфичные для поставщика _check_pre_retirement_.

==== RemoveFromProvider/CheckRemovedFromProvider

Состояние * removefromProvider * позволяет нам некоторую гибкость в обработке фактического удаления виртуальной машины, и именно здесь различаются государственные машины _default_ и _unregister_.

===== Default

Состояние * removeFromProvider * ссылки на машины _default_ на экземпляр _RemoveFromProvider_, который вызывает метод машины _ReMove_from_provider_, передавая аргумент `removal_type`’ 'remove_from_disk'`. Это проверяет, была ли виртуальная машина предоставляется от Manageiq (`vm.miq_provision` не*nil*),*или*, если виртуальная машина помечена ** жизненным циклом/stire_full **. Если кто -то из них является правдой, он полностью удаляет виртуальную машину от основного поставщика, включая изображение диска. Сделав это, это устанавливает логическую переменную состояния `vm_removed_from_provider` на` true`.

Если ни одна из этих проверок не возвращает ** true **, действия не выполняются.

===== Unregister

Состояние * removeFromProvider * Ссылки на машине _unregister_ состояния на экземпляр _unregisterFromProvider_, который вызывает метод машины _Remove_from_provider_, передавая аргумент `removal_type`’ 'unregister'`. Это проверяет, была ли виртуальная машина предоставляется от Manageiq (`vm.miq_provision` не*nil*),*или*, если виртуальная машина помечена ** жизненным циклом/stire_full **. Если кто-то из них является правдой, он удаляет виртуальную машину от основного поставщика, но сохраняет изображение диска виртуальной машины, позволяя воссоздать виртуальную машину, если это необходимо в будущем. Сделав это, это устанавливает логическую переменную состояния `vm_removed_from_provider` на` true`.

Если ни одна из этих проверок не является правдой, действия не выполняются.

==== FinishRetirement

Экземпляр _finishretirement_ вызывает метод машины _finish_retirement_, который устанавливает следующие атрибуты объекта виртуальной машины:

....
: retires_on => date.today
: в отставке => True
: retirement_state => "в отставке"
....

Это также повышает событие * vm_retired *, которое может быть поймано автоматическим действием или политикой управления.

==== DeleteFromVMDB

Экземпляр _DELETEFROMVMDB_ Вызывает метод машины _DELETE_FROM_VMDB_, который проверяет переменную состояния `VM_REMOV_FROM_PROVIDER С помощью CloudForms 4.0/Manageiq _capablanca_ это состояние было включено по умолчанию, что означает, что все записи VM были удалены. С 4.1/_darga_ эта запись прокомментирована, и поэтому мы видим отставные виртуальные машины в Webui как наличие «А» в их квадранте плитки, что указывает на их архив.

=== Summary

Эта глава показывает, что выход на пенсию является более сложным процессом, чем просто удаление виртуальной машины. Мы должны потенциально освободить ресурсы, которые были выделены при создании виртуальной машины, например, IP -адрес. Нам может потребоваться удалить запись CI из CMDB, нерегистратный из Active Directory или даже удержать объект VMDB внутри CloudForms или ManageiQ для целей аудита.

[NOTE]
====
Если виртуальная машина остается в VMDB в архивном состоянии, она все равно будет возвращена в качестве действительной виртуальной машины, если мы запустим `$ evm.vmdb (: vm). Это может стать еще более запутанным, если мы впоследствии повторно предоставили виртуальную машину с тем же именем, как `$ evm.vmdb (: vm) .find_by_name (vm_name)` может вернуть нам объект «неправильный». К счастью, существует логический атрибут «vm.archived», который мы можем проверить, чтобы определить, является ли объект виртуальной машины активным или архивированным.
====

Как мы уже видели, выход на пенсию позволяет нам точно настроить все эти варианты и обрабатывать пенсию таким образом, который нам подходит.

=== Further Reading

https://access.redhat.com/documentation/en/red-hat-cloudforms/4.0/provisioning-virtual-machines-and-hosts/chapter-6-retirement® Виртуальные машины и хосты Глава 6-Пенсионность]

http://www.jung-christian.de/2015/06/delete-vm-from-foreman-duging-retirement/цин виртуальные машины от Форгана во время выхода на пенсию]
